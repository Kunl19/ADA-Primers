//Primer 5

The code below determines the complexity of a password entered in the EnterPassword function. A string is passed as a parameter in the function. A for loop, loops through 
the string and counts the number of letters and numbers. A series of if/else statements check the number of letters, numbers, special characters which was checked using regex
and the word length. If the word entered passes any of the conditional statements an output statement of the complexity of the password is received.

//https://repl.it/@Kunl19/PasswordComplexity#main.cpp

#include <iostream>
#include <regex>

using namespace std;

//Regex

int numbers = 0;
int letters = 0;


void EnterPassword(string word) {
    for (string::size_type i = 0; i < word.size(); ++i) {
        char characters = (word[i]);
        //cout << characters;
        
        //count number of numbers

        if (isdigit(characters)) {
            numbers++;
        }
        //counts number of letters

        if (isalpha(characters)) {
            letters++;
        }

    }

  
        
        //Check if password is very strong - special character >8 and 2 numeric and 4 alpha
        // Make own character set  
        regex regx("[@_!#$%^&*()<>?/|}{~:]");

        // Pass the string in regex_search  
        // method 
        
        //
        if (word.size() >= 8 && regex_search(word, regx) >= 1 && numbers >= 2 && letters > 4) {
            cout << "The password: " << word << " is very strong";
        }
        else if (numbers >= 2 && letters > 4 && word.size() >= 8) {
            cout << "The password: " << word << " is strong";
        }
        else if(word.size() > 4 && (numbers > 1 && letters > 1)) {
            cout << "The password: " << word << " is moderate";
        }
        else {
            cout << "The password: " << word << "  is weak";
        }

        //Check if moderate > 8 characters 
    
    
    
}


int main() {
    EnterPassword("Password2021##");
}
